name: Enrich YAML with CVE Details

on: [push]

jobs:

  enrich:

    runs-on: ubuntu-latest

    steps:

    - uses: actions/checkout@v2

    - name: Check if CVE ID exists
      id: check
      run: |
        find . -name '*.yaml' ! -name 'blank.yaml' | xargs grep -l 'cve-id:' | wc -l | xargs echo "::set-output name=exists::"

    - name: Get CVE details
      if: ${{ steps.check.outputs.exists != '0' }}
      run: |
        cve=${{ steps.check.outputs.cve }}
        details=$(curl https://cve.circl.lu/api/cve/$cve)
        
        # Extract CVSS and references
        cvss=$(echo "$details" | jq -r '.cvss')
        references=$(echo "$details" | jq -r '.references[]')
        
        echo "::set-output name=cvss::$cvss"
        echo "::set-output name=references::$references"
    
      id: cve

    - name: Add CVE details
      if: ${{ steps.check.outputs.exists != '0' }}
      run: |
      
        details="${{ steps.cve.outputs.details }}"
      
        for file in $(find . -name '*.yaml' ! -name 'blank.yaml'); do
        
          # Add CVSS
          cvss="${{ steps.cve.outputs.cvss }}"
          yaml="cvss-score: $cvss"
          echo "$yaml" | jq --argjson add "$yaml" '.metadata += $add' "$file" > "${file}_new"
        
          # Add references  
          refs="${{ steps.cve.outputs.references }}"
          for ref in $refs; do
            yaml="references:
                  - $ref"
            echo "$yaml" | jq --argjson add "$yaml" '.metadata += $add' "${file}_new" > "${file}_tmp"
            mv "${file}_tmp" "${file}_new"
          done
        
          mv "${file}_new" "$file"
        
        done
